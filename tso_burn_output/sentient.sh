#!/bin/bash
# SentientOS TSO Launcher
# Generated by TSO Burn process

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

export SENTIENT_ROOT="$(dirname "$(realpath "$0")")"
export PATH="$SENTIENT_ROOT/bin:$PATH"

echo -e "${BLUE}====================================\033[0m"
echo -e "${BLUE}   SentientOS TSO Runtime v0.1.0   \033[0m"
echo -e "${BLUE}====================================\033[0m"

# Initialize system
echo -e "${YELLOW}Initializing SentientOS runtime...\033[0m"
mkdir -p $SENTIENT_ROOT/.runtime/logs
echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") - System boot" > $SENTIENT_ROOT/.runtime/logs/boot.log

# Start ZK verification service
echo -e "${YELLOW}Starting ZK verification service...\033[0m"
touch $SENTIENT_ROOT/.zk/service.active

# Start MatrixBox container runtime
echo -e "${YELLOW}Starting MatrixBox container runtime...\033[0m"
touch $SENTIENT_ROOT/.container/runtime.active

# Launch SentientOS shell
echo -e "${GREEN}SentientOS TSO Runtime initialized\033[0m"
echo -e "${GREEN}Starting SentientOS shell...\033[0m\n"

PS1="[${GREEN}sentient${NC}]$ "
export SENTIENT_ACTIVE=true

cat << 'HELP_TEXT'
SentientOS TSO Runtime Commands:
  zk-verify            - Verify ZK contracts
  matrix-run <app>     - Run a MatrixBox container
  trace-view           - View runtime trace
  contract-verify      - Verify a smart contract
  exit                 - Exit SentientOS TSO Runtime
HELP_TEXT

echo ""
exec /bin/bash --rcfile $SENTIENT_ROOT/.bashrc
